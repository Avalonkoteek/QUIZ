{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fepif\\\\Desktop\\\\projects\\\\quiz\\\\QUIZ\\\\src\\\\Components\\\\UI\\\\Input\\\\Input.js\";\nimport React from \"react\";\nimport \"./Input.css\";\n\nfunction isInvalid({\n  valid,\n  touched,\n  shouldValidate\n}) {\n  return !valid && shouldValidate && touched;\n}\n\nconst Input = props => {\n  const inputType = props.type || \"text\";\n  const cls = [\"Input\"];\n  const htmlFor = \"\".concat(inputType, \"-\").concat(Math.random());\n\n  if (isInvalid(props)) {\n    cls.push(\"invalid\");\n  }\n\n  return React.createElement(\"div\", {\n    className: cls.join(\" \"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: htmlFor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, props.label), React.createElement(\"input\", {\n    className: \"input\",\n    type: inputType,\n    id: htmlFor,\n    value: props.value,\n    onChange: props.onChange,\n    placeholder: props.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), isInvalid(props) ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, props.errorMessage || \"Введите верные значения\") : null);\n};\n\nexport default Input;","map":{"version":3,"sources":["C:/Users/fepif/Desktop/projects/quiz/QUIZ/src/Components/UI/Input/Input.js"],"names":["React","isInvalid","valid","touched","shouldValidate","Input","props","inputType","type","cls","htmlFor","Math","random","push","join","label","value","onChange","errorMessage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBC,EAAAA;AAAlB,CAAnB,EAAuD;AACrD,SAAO,CAACF,KAAD,IAAUE,cAAV,IAA4BD,OAAnC;AACD;;AAED,MAAME,KAAK,GAAGC,KAAK,IAAI;AACrB,QAAMC,SAAS,GAAGD,KAAK,CAACE,IAAN,IAAc,MAAhC;AACA,QAAMC,GAAG,GAAG,CAAC,OAAD,CAAZ;AACA,QAAMC,OAAO,aAAMH,SAAN,cAAmBI,IAAI,CAACC,MAAL,EAAnB,CAAb;;AAEA,MAAIX,SAAS,CAACK,KAAD,CAAb,EAAsB;AACpBG,IAAAA,GAAG,CAACI,IAAJ,CAAS,SAAT;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAEJ,GAAG,CAACK,IAAJ,CAAS,GAAT,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAEJ,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BJ,KAAK,CAACS,KAAhC,CADF,EAEE;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,IAAI,EAAER,SAFR;AAGE,IAAA,EAAE,EAAEG,OAHN;AAIE,IAAA,KAAK,EAAEJ,KAAK,CAACU,KAJf;AAKE,IAAA,QAAQ,EAAEV,KAAK,CAACW,QALlB;AAME,IAAA,WAAW,EAAEX,KAAK,CAACS,KANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAUGd,SAAS,CAACK,KAAD,CAAT,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,KAAK,CAACY,YAAN,IAAsB,yBAA7B,CADD,GAEG,IAZN,CADF;AAgBD,CAzBD;;AA0BA,eAAeb,KAAf","sourcesContent":["import React from \"react\";\r\nimport \"./Input.css\";\r\n\r\nfunction isInvalid({ valid, touched, shouldValidate }) {\r\n  return !valid && shouldValidate && touched;\r\n}\r\n\r\nconst Input = props => {\r\n  const inputType = props.type || \"text\";\r\n  const cls = [\"Input\"];\r\n  const htmlFor = `${inputType}-${Math.random()}`;\r\n\r\n  if (isInvalid(props)) {\r\n    cls.push(\"invalid\");\r\n  }\r\n\r\n  return (\r\n    <div className={cls.join(\" \")}>\r\n      <label htmlFor={htmlFor}>{props.label}</label>\r\n      <input\r\n        className=\"input\"\r\n        type={inputType}\r\n        id={htmlFor}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n        placeholder={props.label}\r\n      />\r\n      {isInvalid(props) ? (\r\n        <span>{props.errorMessage || \"Введите верные значения\"}</span>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\nexport default Input;\r\n"]},"metadata":{},"sourceType":"module"}