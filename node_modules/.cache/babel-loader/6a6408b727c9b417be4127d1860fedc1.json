{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\fepif\\\\Desktop\\\\projects\\\\quiz\\\\QUIZ\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\fepif\\\\Desktop\\\\projects\\\\quiz\\\\QUIZ\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport { AUTH_SUCCESS, AUTH_LOGOUT } from \"./actionTypes\";\nexport function auth(email, password, isLogin) {\n  return (/*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n        var authData, url, response, data, expirationDate;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              authData = {\n                email,\n                password,\n                returnSecureToken: true\n              };\n              url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyD9TjeKvLb6dQ_tHNQhDhxgrHKLHm0ekCY\";\n\n              if (isLogin) {\n                url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyD9TjeKvLb6dQ_tHNQhDhxgrHKLHm0ekCY\";\n              }\n\n              _context.next = 5;\n              return axios.post(url, authData);\n\n            case 5:\n              response = _context.sent;\n              data = response.data;\n              expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000);\n              localStorage.setItem(\"token\", data.idToken);\n              localStorage.setItem(\"userId\", data.localId);\n              localStorage.setItem(\"expirationDate\", expirationDate);\n              dispatch(authSuccess(data.idToken));\n              dispatch(autoLogout(data.expiresIn));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}\nexport function autoLogout(time) {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, time * 1000);\n  };\n}\nexport function logout() {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"userId\");\n  localStorage.removeItem(\"expirationDate\");\n  return {\n    type: AUTH_LOGOUT\n  };\n}\nexport function autoLogin() {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n\n    if (!token) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token));\n        dispatch(autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n}\nexport function authSuccess(token) {\n  return {\n    type: AUTH_SUCCESS,\n    token\n  };\n}","map":{"version":3,"sources":["C:/Users/fepif/Desktop/projects/quiz/QUIZ/src/store/actions/auth.js"],"names":["axios","AUTH_SUCCESS","AUTH_LOGOUT","auth","email","password","isLogin","dispatch","authData","returnSecureToken","url","post","response","data","expirationDate","Date","getTime","expiresIn","localStorage","setItem","idToken","localId","authSuccess","autoLogout","time","setTimeout","logout","removeItem","type","autoLogin","token","getItem"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { AUTH_SUCCESS, AUTH_LOGOUT } from \"./actionTypes\";\r\n\r\nexport function auth(email, password, isLogin) {\r\n  return async dispatch => {\r\n    const authData = {\r\n      email,\r\n      password,\r\n      returnSecureToken: true\r\n    };\r\n    let url =\r\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyD9TjeKvLb6dQ_tHNQhDhxgrHKLHm0ekCY\";\r\n    if (isLogin) {\r\n      url =\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyD9TjeKvLb6dQ_tHNQhDhxgrHKLHm0ekCY\";\r\n    }\r\n    const response = await axios.post(url, authData);\r\n    const data = response.data;\r\n    const expirationDate = new Date(\r\n      new Date().getTime() + data.expiresIn * 1000\r\n    );\r\n    localStorage.setItem(\"token\", data.idToken);\r\n    localStorage.setItem(\"userId\", data.localId);\r\n    localStorage.setItem(\"expirationDate\", expirationDate);\r\n\r\n    dispatch(authSuccess(data.idToken));\r\n    dispatch(autoLogout(data.expiresIn));\r\n  };\r\n}\r\nexport function autoLogout(time) {\r\n  return dispatch => {\r\n    setTimeout(() => {\r\n      dispatch(logout());\r\n    }, time * 1000);\r\n  };\r\n}\r\nexport function logout() {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"userId\");\r\n  localStorage.removeItem(\"expirationDate\");\r\n  return {\r\n    type: AUTH_LOGOUT\r\n  };\r\n}\r\n\r\nexport function autoLogin() {\r\n  return dispatch => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      dispatch(logout());\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(logout());\r\n      } else {\r\n        dispatch(authSuccess(token));\r\n        dispatch(\r\n          autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000)\r\n        );\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nexport function authSuccess(token) {\r\n  return {\r\n    type: AUTH_SUCCESS,\r\n    token\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}