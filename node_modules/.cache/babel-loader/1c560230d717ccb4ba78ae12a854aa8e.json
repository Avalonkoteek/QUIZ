{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\fepif\\\\Desktop\\\\projects\\\\quiz\\\\QUIZ\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\fepif\\\\Desktop\\\\projects\\\\quiz\\\\quiz\\\\src\\\\Containers\\\\Auth\\\\Auth.js\";\nimport React from \"react\";\nimport \"./Auth.css\";\nimport Button from \"../../Components/UI/Button/button\";\nimport Input from \"../../Components/UI/Input/Input\";\nimport is from \"is_js\";\nimport { auth as _auth } from \"../../store/actions/auth\";\nimport { connect } from \"react-redux\";\n\nclass Auth extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isFormValid: false,\n      formControls: {\n        email: {\n          value: \"\",\n          type: \"email\",\n          label: \"Email\",\n          errorMessage: \"Введите корректный email\",\n          valid: false,\n          touched: false,\n          validation: {\n            required: true,\n            email: true\n          }\n        },\n        password: {\n          value: \"\",\n          type: \"passwprd\",\n          label: \"Пароль\",\n          errorMessage: \"Введите корректный пароль\",\n          valid: false,\n          touched: false,\n          validation: {\n            required: true,\n            minLength: 6\n          }\n        }\n      }\n    };\n\n    this.loginHandler = () => {\n      this.props.auth(this.state.formControls.email.value, this.state.formControls.password.value, true);\n    };\n\n    this.registerHandler = () => {\n      this.props.auth(this.state.formControls.email.value, this.state.formControls.password.value, false);\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n    };\n\n    this.onChangeHandler = (event, controlName) => {\n      const formControls = _objectSpread({}, this.state.formControls);\n\n      const control = _objectSpread({}, formControls[controlName]);\n\n      control.value = event.target.value;\n      control.touched = true;\n      control.valid = this.validateControl(control.value, control.validation);\n      formControls[controlName] = control;\n      let isFormValid = true;\n      Object.keys(formControls).forEach(name => {\n        isFormValid = formControls[name].valid && isFormValid;\n      });\n      this.setState({\n        formControls,\n        isFormValid\n      });\n    };\n  }\n\n  validateControl(value, validation) {\n    if (!validation) {\n      return true;\n    }\n\n    let isValid = true;\n\n    if (validation.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n\n    if (validation.email) {\n      isValid = is.email(value) && isValid;\n    }\n\n    if (validation.minLength) {\n      isValid = value.length >= validation.minLength && isValid;\n    }\n\n    return isValid;\n  }\n\n  renderInputs() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName];\n      return React.createElement(Input, {\n        key: controlName + index,\n        type: control.type,\n        value: control.value,\n        valid: control.valid,\n        touched: control.touched,\n        label: control.label,\n        shouldValidate: !!control.validation,\n        errorMessage: control.errorMessage,\n        onChange: event => {\n          this.onChangeHandler(event, controlName);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Auth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"), React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      className: \"AuthForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.renderInputs(), React.createElement(Button, {\n      disabled: !this.state.isFormValid,\n      type: \"success\",\n      onClick: this.loginHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"\\u0412\\u043E\\u0439\\u0442\\u0438\"), React.createElement(Button, {\n      disabled: !this.state.isFormValid,\n      type: \"primary\",\n      onClick: this.registerHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0435\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"))));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    auth: (email, password, isLogin) => dispatch(_auth(email, password, isLogin))\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(Auth);","map":{"version":3,"sources":["C:/Users/fepif/Desktop/projects/quiz/quiz/src/Containers/Auth/Auth.js"],"names":["React","Button","Input","is","auth","connect","Auth","Component","state","isFormValid","formControls","email","value","type","label","errorMessage","valid","touched","validation","required","password","minLength","loginHandler","props","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","control","target","validateControl","Object","keys","forEach","name","setState","isValid","trim","length","renderInputs","map","index","render","mapDispatchToProps","dispatch","isLogin"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./Auth.css\";\r\nimport Button from \"../../Components/UI/Button/button\";\r\nimport Input from \"../../Components/UI/Input/Input\";\r\nimport is from \"is_js\";\r\nimport { auth } from \"../../store/actions/auth\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Auth extends React.Component {\r\n  state = {\r\n    isFormValid: false,\r\n    formControls: {\r\n      email: {\r\n        value: \"\",\r\n        type: \"email\",\r\n        label: \"Email\",\r\n        errorMessage: \"Введите корректный email\",\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          email: true\r\n        }\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        type: \"passwprd\",\r\n        label: \"Пароль\",\r\n        errorMessage: \"Введите корректный пароль\",\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          minLength: 6\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  loginHandler = () => {\r\n    this.props.auth(\r\n      this.state.formControls.email.value,\r\n      this.state.formControls.password.value,\r\n      true\r\n    );\r\n  };\r\n  registerHandler = () => {\r\n    this.props.auth(\r\n      this.state.formControls.email.value,\r\n      this.state.formControls.password.value,\r\n      false\r\n    );\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n  };\r\n  validateControl(value, validation) {\r\n    if (!validation) {\r\n      return true;\r\n    }\r\n    let isValid = true;\r\n    if (validation.required) {\r\n      isValid = value.trim() !== \"\" && isValid;\r\n    }\r\n    if (validation.email) {\r\n      isValid = is.email(value) && isValid;\r\n    }\r\n    if (validation.minLength) {\r\n      isValid = value.length >= validation.minLength && isValid;\r\n    }\r\n    return isValid;\r\n  }\r\n\r\n  onChangeHandler = (event, controlName) => {\r\n    const formControls = { ...this.state.formControls };\r\n    const control = { ...formControls[controlName] };\r\n\r\n    control.value = event.target.value;\r\n    control.touched = true;\r\n    control.valid = this.validateControl(control.value, control.validation);\r\n    formControls[controlName] = control;\r\n\r\n    let isFormValid = true;\r\n\r\n    Object.keys(formControls).forEach(name => {\r\n      isFormValid = formControls[name].valid && isFormValid;\r\n    });\r\n\r\n    this.setState({\r\n      formControls,\r\n      isFormValid\r\n    });\r\n  };\r\n\r\n  renderInputs() {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName];\r\n      return (\r\n        <Input\r\n          key={controlName + index}\r\n          type={control.type}\r\n          value={control.value}\r\n          valid={control.valid}\r\n          touched={control.touched}\r\n          label={control.label}\r\n          shouldValidate={!!control.validation}\r\n          errorMessage={control.errorMessage}\r\n          onChange={event => {\r\n            this.onChangeHandler(event, controlName);\r\n          }}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Auth\">\r\n        <div>\r\n          <h1>Авторизация</h1>\r\n          <form onSubmit={this.submitHandler} className=\"AuthForm\">\r\n            {this.renderInputs()}\r\n            <Button\r\n              disabled={!this.state.isFormValid}\r\n              type=\"success\"\r\n              onClick={this.loginHandler}\r\n            >\r\n              Войти\r\n            </Button>\r\n            <Button\r\n              disabled={!this.state.isFormValid}\r\n              type=\"primary\"\r\n              onClick={this.registerHandler}\r\n            >\r\n              Зарегестрироваться\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\r\n  };\r\n}\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Auth);\r\n"]},"metadata":{},"sourceType":"module"}