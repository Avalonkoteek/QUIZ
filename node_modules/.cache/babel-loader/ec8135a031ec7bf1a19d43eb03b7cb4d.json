{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fepif\\\\Desktop\\\\projects\\\\quiz\\\\quiz\\\\src\\\\Containers\\\\Quiz\\\\Quiz.js\";\nimport React from \"react\";\nimport \"./Quiz.css\";\nimport ActiveQuiz from \"../../Components/ActiveQuiz/ActiveQuiz\";\nimport FinishedQuiz from \"../../Components/FinishedQuiz/FinishedQuiz\";\nimport Loader from \"../../Components/UI/Loader/Loader\";\nimport { connect } from \"react-redux\";\nimport { fetchQuizById as _fetchQuizById, quizAnswerClick as _quizAnswerClick, retryQuiz as _retryQuiz } from \"../../store/actions/quiz\";\n\nclass Quiz extends React.Component {\n  componentDidMount() {\n    this.props.fetchQuizById(this.props.match.params.id);\n  }\n\n  componentWillUnmount() {\n    this.props.retryQuiz();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Quiz\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"QuizWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u044C\\u0442\\u0435 \\u043D\\u0430 \\u0432\\u0441\\u0435 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B\"), this.props.loading || !this.props.quiz ? React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }) : this.props.isFinished ? React.createElement(FinishedQuiz, {\n      onRetry: this.props.retryQuiz,\n      quiz: this.props.quiz,\n      results: this.props.results,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }) : React.createElement(ActiveQuiz, {\n      answers: this.props.quiz[this.props.activeQuestion].answers,\n      question: this.props.quiz[this.props.activeQuestion].question,\n      onAnswerClick: this.props.quizAnswerClick,\n      quizLength: this.props.quiz.length,\n      answerNumber: this.props.activeQuestion + 1,\n      state: this.props.answerState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    results: state.quiz.results,\n    isFinished: state.quiz.isFinished,\n    activeQuestion: state.quiz.activeQuestion,\n    answerState: state.quiz.answerState,\n    quiz: state.quiz.quiz,\n    loading: state.quiz.loading\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchQuizById: id => dispatch(_fetchQuizById(id)),\n    quizAnswerClick: answerId => dispatch(_quizAnswerClick(answerId)),\n    retryQuiz: () => dispatch(_retryQuiz())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);","map":{"version":3,"sources":["C:/Users/fepif/Desktop/projects/quiz/quiz/src/Containers/Quiz/Quiz.js"],"names":["React","ActiveQuiz","FinishedQuiz","Loader","connect","fetchQuizById","quizAnswerClick","retryQuiz","Quiz","Component","componentDidMount","props","match","params","id","componentWillUnmount","render","loading","quiz","isFinished","results","activeQuestion","answers","question","length","answerState","mapStateToProps","state","mapDispatchToProps","dispatch","answerId"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./Quiz.css\";\r\nimport ActiveQuiz from \"../../Components/ActiveQuiz/ActiveQuiz\";\r\nimport FinishedQuiz from \"../../Components/FinishedQuiz/FinishedQuiz\";\r\nimport Loader from \"../../Components/UI/Loader/Loader\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  fetchQuizById,\r\n  quizAnswerClick,\r\n  retryQuiz\r\n} from \"../../store/actions/quiz\";\r\n\r\nclass Quiz extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchQuizById(this.props.match.params.id);\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.retryQuiz();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Quiz\">\r\n        <div className=\"QuizWrapper\">\r\n          <h1>Ответьте на все вопросы</h1>\r\n          {this.props.loading || !this.props.quiz ? (\r\n            <Loader />\r\n          ) : this.props.isFinished ? (\r\n            <FinishedQuiz\r\n              onRetry={this.props.retryQuiz}\r\n              quiz={this.props.quiz}\r\n              results={this.props.results}\r\n            />\r\n          ) : (\r\n            <ActiveQuiz\r\n              answers={this.props.quiz[this.props.activeQuestion].answers}\r\n              question={this.props.quiz[this.props.activeQuestion].question}\r\n              onAnswerClick={this.props.quizAnswerClick}\r\n              quizLength={this.props.quiz.length}\r\n              answerNumber={this.props.activeQuestion + 1}\r\n              state={this.props.answerState}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    results: state.quiz.results,\r\n    isFinished: state.quiz.isFinished,\r\n    activeQuestion: state.quiz.activeQuestion,\r\n    answerState: state.quiz.answerState,\r\n    quiz: state.quiz.quiz,\r\n    loading: state.quiz.loading\r\n  };\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    fetchQuizById: id => dispatch(fetchQuizById(id)),\r\n    quizAnswerClick: answerId => dispatch(quizAnswerClick(answerId)),\r\n    retryQuiz: () => dispatch(retryQuiz())\r\n  };\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);\r\n"]},"metadata":{},"sourceType":"module"}